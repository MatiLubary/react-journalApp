{"version":3,"sources":["components/firebase/firebase-config.js","types/types.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/auth/LoadingScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","googleAuthProvider","GoogleAuthProvider","types","loadNotes","uid","a","getDocs","query","collection","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","document","querySelectorAll","entry","classList","add","startSaveNote","getState","auth","url","noteToFirestore","noteRef","doc","updateDoc","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","formValues","date","activeId","useRef","useEffect","current","noteDate","moment","className","format","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","querySelector","click","console","log","NoteScreen","placeholder","autoComplete","src","alt","deleteDoc","contains","replace","setTimeout","startDeleteing","NothingSelected","setError","err","startLoginEmailPassword","email","password","getAuth","signInWithEmailAndPassword","then","user","login","displayName","catch","error","message","logout","JournalEntry","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","addDoc","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegEmailPwName","AuthRouter","exact","path","component","LoadingScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a20c95b2.chunk.js","sourcesContent":["import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n \r\n \r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA4i7gTVIfpqAT2ifCHKAXPFmN18vWAaRs\",\r\n    authDomain: \"react-app-course-8988f.firebaseapp.com\",\r\n    projectId: \"react-app-course-8988f\",\r\n    storageBucket: \"react-app-course-8988f.appspot.com\",\r\n    messagingSenderId: \"618460358483\",\r\n    appId: \"1:618460358483:web:b61e304edb22480516a3a6\",\r\n    measurementId: \"G-0MGW0EM3V5\"\r\n};\r\n \r\n// Initialize Firebase\r\n// const app = initializeApp(firebaseConfig);\r\n\r\ninitializeApp(firebaseConfig);\r\n\r\n \r\nconst db = getFirestore();\r\n \r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n \r\nexport{\r\n    db,\r\n    googleAuthProvider\r\n}","\r\n\r\nexport const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] LogoutCleaning',\r\n\r\n\r\n}","import { collection, query, getDocs } from \"@firebase/firestore\";\r\nimport {db} from '../components/firebase/firebase-config';\r\n \r\nexport const loadNotes = async (uid) => {\r\n \r\n    const notesSnap = await getDocs(query(collection(db, `${ uid }/journal/notes`)));\r\n    const notes = [];\r\n \r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n      });\r\n \r\n    return notes;\r\n};","\r\n\r\n\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/duutidqkf/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal')\r\n    formData.append('file', file)\r\n\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n        \r\n    } catch (err) {\r\n\r\n        throw err\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import {db} from '../components/firebase/firebase-config';\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { types } from '../types/types';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { doc, updateDoc, deleteDoc } from \"firebase/firestore\"; \r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\n\r\n//\thttps://api.cloudinary.com/v1_1/duutidqkf\r\n\r\n// react-journal\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth\r\n\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n\r\n\r\n\r\n        const doc = await addDoc(collection(db, `${ uid }`, \"journal/notes\"), newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote))\r\n        dispatch(addNewNote(doc.id, newNote));\r\n        \r\n        document.querySelector(`[data-id=\"${doc.id}\"]`).classList.add('animate__bounceInLeft')\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n\r\n        document.querySelectorAll('.journal__entry').forEach(entry => {\r\n            entry.classList.add('animate__fadeIn')\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\n\r\nexport const startSaveNote = (note) => {\r\n\r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth\r\n     \r\n        if(!note.url){\r\n          delete note.url\r\n        }\r\n     \r\n        const noteToFirestore = {...note}\r\n        delete noteToFirestore.id\r\n        const noteRef = doc(db, `${uid}/journal/notes/${note.id}`)\r\n        await updateDoc(noteRef,noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n\r\n        Swal.fire('Saved', note.title, 'success')\r\n\r\n      }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {active:activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: \"Uploading...\",\r\n            text: \"Please wait...\",\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl =  await fileUpload(file);\r\n        \r\n        activeNote.url = fileUrl\r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        Swal.close();\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startDeleteing = (id) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        const noteRef = doc(db, `${uid}/journal/notes/${id}`)\r\n        await deleteDoc(noteRef);\r\n\r\n\r\n        if (document.querySelector(`[data-id=\"${id}\"]`).classList.contains('animate__fadeIn')) {\r\n            document.querySelector(`[data-id=\"${id}\"]`).classList.replace('animate__fadeIn', 'animate__bounceOutLeft')\r\n        } else if (document.querySelector(`[data-id=\"${id}\"]`).classList.contains('animate__bounceInLeft')) {\r\n            document.querySelector(`[data-id=\"${id}\"]`).classList.replace('animate__bounceInLeft', 'animate__bounceOutLeft')\r\n        }\r\n \r\n        setTimeout(() => {\r\n            dispatch(deleteNote(id));\r\n        }, 350);\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n\r\n    type: types.notesLogoutCleaning,\r\n})\r\n\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState)\r\n    }\r\n\r\n  \r\n    const handleInputChange = ({target}) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n\r\n    return [values, handleInputChange, reset]\r\n\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startSaveNote, startUploading } from '../../actions/notes'\r\nimport moment from 'moment'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\n\r\n\r\n\r\nexport const NotesAppBar = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n\r\n    const handleSave = () => {\r\n\r\n        dispatch(startSaveNote(active))\r\n\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click()\r\n        console.log('picture')\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (file) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n/*     const current = new Date();\r\n    const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`; */\r\n\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(active);\r\n\r\n    const {body, title, id, date} = formValues\r\n\r\n    const activeId = useRef(active.id)\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        if (active.id !== activeId.current) {\r\n            reset(active);\r\n            activeId.current = active.id\r\n        }\r\n    }, [active, reset])\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(activeNote(formValues.id, {...formValues}));\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const noteDate = moment(date)\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{noteDate.format('Do')} of {noteDate.format('MMMM')}</span>\r\n\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type= \"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n\r\n            <div className=\"dFlex\">\r\n                <button className=\"btn btn-two\" onClick={handlePictureClick}>\r\n                    Picture\r\n                </button>\r\n\r\n                <button className=\"btn btn-two\" onClick={handleSave}>\r\n                    Save\r\n                </button>\r\n\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { activeNote, startDeleteing } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const {active:note} = useSelector(state => state.notes)\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n    const {body, title, id} = formValues\r\n\r\n    const activeId = useRef(note.id)\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id\r\n        }\r\n    }, [note, reset])\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(activeNote(formValues.id, {...formValues}));\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleClick = () => {\r\n        dispatch(startDeleteing(id))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"some random title\"\r\n                    className=\"notes__title-input\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    autoComplete=\"off\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    (<div className=\"notes__image\">\r\n                        <img\r\n                            src={note.url}\r\n                            alt=\"bgImage\"\r\n                        />\r\n                    </div>)\r\n                }\r\n            </div>\r\n\r\n            <button className=\"btn btn-danger\" onClick={handleClick}>\r\n                Delete\r\n\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something<br />\r\n                or create an entry\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = (err) => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n\r\n})\r\n","import { getAuth, signInWithPopup, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { googleAuthProvider } from '../components/firebase/firebase-config';\r\nimport {types} from '../types/types';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport Swal from 'sweetalert2'\r\nimport { noteLogout } from './notes';\r\n \r\nexport const startLoginEmailPassword = (email, password) =>{\r\n    return (dispatch) =>{\r\n\r\n        dispatch (startLoading());\r\n       \r\n        const auth = getAuth();\r\n\r\n        signInWithEmailAndPassword(auth, email, password)\r\n        .then(({ user }) => {\r\n            \r\n            dispatch (login(user.uid, user.displayName))\r\n\r\n            dispatch (finishLoading());\r\n\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            Swal.fire(\"Error\", error.message)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const startRegEmailPwName = (email, password, name) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        const auth = getAuth();\r\n            createUserWithEmailAndPassword(auth, email, password)\r\n            .then( async({ user }) => {\r\n\r\n            await updateProfile( user, { displayName: name });\r\n\r\n            dispatch (login(user.uid, user.displayName))\r\n        })\r\n\r\n        .catch (e => {\r\n            console.log(e);\r\n            Swal.fire(\"Error\", e.message)\r\n        })\r\n    }\r\n\r\n}\r\n \r\nexport const startGoogleLogin = () =>{\r\n    return (dispatch) =>{\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, googleAuthProvider)\r\n            .then(({user}) =>{\r\n                dispatch(login(user.uid, user.displayName))\r\n            });\r\n    }\r\n}\r\n \r\nexport const login = (uid, displayName) =>(\r\n    {\r\n        type:types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n)\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        const auth = getAuth();\r\n        await auth.signOut();\r\n\r\n        dispatch(logout())\r\n        dispatch(noteLogout())\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () =>({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport moment from 'moment'\r\nimport { activeNote } from '../../actions/notes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n\r\n\r\n    const noteDate = moment(date)\r\n\r\n    const dispatch = useDispatch(activeNote)\r\n\r\n    \r\n\r\n    const handleEntryClick = () => {\r\n\r\n        dispatch(activeNote( id, {\r\n            date, title, body, url\r\n            }\r\n        ))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"journal__entry animate__animated animate__faster\" onClick={handleEntryClick} data-id={id}>\r\n            \r\n            {\r\n                url && \r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${ url })`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title mb-1\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <h2 className=\"\">{noteDate.format('Do')}</h2>\r\n                <p>{noteDate.format('dddd')}</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => \r\n                    <JournalEntry\r\n                        key={note.id} \r\n                        {...note}\r\n                        \r\n                        \r\n                    />\r\n                    )\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    \r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch(startLogout())\r\n\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"\">\r\n                    <i className=\"far fa-moon\"> </i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n\r\n                <button \r\n                    className=\"btn btn-noBorder\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n\r\n            </div>\r\n\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New Entry</p>\r\n            </div>\r\n\r\n\r\n            <JournalEntries />\r\n            \r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            \r\n            <Sidebar />\r\n\r\n\r\n\r\n            <main>\r\n\r\n\r\n                {\r\n                    ( active ) ? (<NoteScreen />) : (<NothingSelected />)\r\n                }\r\n                \r\n            </main>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {  startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password))\r\n    }\r\n\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch (startGoogleLogin() )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"centerT\">\r\n            \r\n            <h2 className=\"auth__title mb-5\">Login</h2>\r\n\r\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn animate__faster\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-one\"\r\n                    disabled={ loading }\r\n                >\r\n                Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p className=\"mb-1\">Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    className=\"link\"\r\n                    to=\"/auth/register\"\r\n                >\r\n                    Create new Account\r\n                </Link>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator'\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegEmailPwName } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector( state => state.ui );\r\n    console.log(msgError)\r\n\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (isFormValid()) {\r\n            dispatch (startRegEmailPwName(email, password, name))\r\n\r\n        }\r\n    }\r\n    \r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError(\"Name is required\"))\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError(\"Email is not valid\"))\r\n            return false \r\n        } else if (password !== password2 || password.length < 5 ) {\r\n            dispatch(setError(\"Passwords must match and be over 5 chars\"))\r\n            return false\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"centerT\">\r\n            \r\n            <h2 className=\"auth__title mb-5\">Register</h2>\r\n\r\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}    \r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-one mb-5\"\r\n                >\r\n                Register\r\n                </button>\r\n\r\n\r\n                <Link \r\n                    className=\"link\"\r\n                    to=\"/auth/login\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n\r\n                    <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n\r\n                    \r\n                    <Redirect to=\"/auth/register\" />\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const LoadingScreen = () => {\r\n    return (\r\n        <div className=\"centered\">\r\n            <div className=\"loader\">\r\n                <span className=\"one\"></span>\r\n                <span className=\"two\"></span>\r\n                <span className=\"three\"></span>\r\n                <span className=\"four\"></span>\r\n                <span className=\"five\"></span>\r\n                <span className=\"six\"></span>\r\n                <span className=\"seven\"></span>\r\n                <span className=\"eight\"></span>\r\n                <span className=\"nine\"></span>\r\n                <span className=\"ten\"></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated ) ? (<Component { ...props } />) : (<Redirect to =\"/auth/login\" />)\r\n             )}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( !isAuthenticated ) ? (<Component { ...props } />) : (<Redirect to =\"/\" />)\r\n             )}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { getAuth, onAuthStateChanged } from '@firebase/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { LoadingScreen } from '../components/auth/LoadingScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true)\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        const auth = getAuth();\r\n        onAuthStateChanged(auth, async(user) =>{\r\n\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true)\r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n            } else {\r\n                setIsLoggedIn(false)\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        })\r\n\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n    if (checking) {\r\n        return(\r\n            <LoadingScreen />\r\n        )\r\n    }\r\n\r\n    return (\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute \r\n                            path=\"/auth\"\r\n                            component={AuthRouter}\r\n                            isAuthenticated={isLoggedIn}\r\n                        />\r\n                        <PrivateRoute\r\n                            exact\r\n                            path='/'\r\n                            component={JournalScreen}\r\n                            isAuthenticated={isLoggedIn}\r\n                        />\r\n\r\n\r\n                        <Redirect to=\"/auth/login\" />\r\n\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n}","\r\n\r\n/* const thing = {\r\n    notes: [],\r\n    active: null,\r\n    active: {\r\n        id: '1211',\r\n        title: '',\r\n        body: '',\r\n        imageUrl: '',\r\n        date: 123456\r\n    }\r\n} */\r\n\r\nimport { startRegEmailPwName } from \"../actions/auth\"\r\nimport { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state =  initialState,  action) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note => note.id === action.payload.id ? action.payload.note : note)\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n\r\n\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport { authReducer } from '../reducers/authReducer';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    );\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return { }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => { \r\n    return (\r\n        <Provider store = {store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss'\nimport { JournalApp } from './JournalApp';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}